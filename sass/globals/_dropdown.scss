//
// Dropdown menus
// --------------------------------------------------

$z-dropdown: 200;

// Dropdown arrow/caret
.caret {
  position: absolute;
  right: 8px;
  top: 50%;
  border: 4px solid transparent;
  border-top-color: getColor(dropdown, caret);
  margin-top: -2px;
  @include transition(transform .4s);
}

// The dropdown wrapper (div)
.dropup,
.dropdown {
  position: relative;

  > a {
    padding-right: 24px !important;
  }

  &.open{
    .caret{
      @include transform(rotateZ(180deg) translateY(50%));
    }
  }
}

// Prevent the focus on the dropdown toggle when closing dropdowns
.dropdown-toggle:focus {
  outline: 0;
}

// The dropdown menu (ul)
.dropdown-menu {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: $z-dropdown;
  display: none; // none by default, but block on "open" of the menu
  float: left;
  margin: 0; // override default ul
  list-style: none;
  text-align: left; // Ensures proper alignment if parent has it changed (e.g., modal footer)
  background-clip: padding-box;
  min-width: 160px;
  max-width: 320px;
  background-color: getColor(dropdown, menuBg);

  // Aligns the dropdown menu to right
  //
  // Deprecated as of 3.1.0 in favor of `.dropdown-menu-[dir]`
  &.pull-right {
    right: 0;
    left: auto;
  }

  // Dividers (basically an hr) within the dropdown
  .divider {
  }

  // Links within the dropdown menu
  > li > a {
    color: getColor(dropdown, text);
    @include ellipsis;

    &:hover,
    &:focus {
    }
  }
}

// Active state
.dropdown-menu > .active > a {
  &,
  &:hover,
  &:focus {
  }
}

// Disabled state
//
// Gray out text and ensure the hover/focus state remains gray

.dropdown-menu > .disabled > a {
  &,
  &:hover,
  &:focus {
  }

  // Nuke hover/focus effects
  &:hover,
  &:focus {
  }
}

// Open state for the dropdown
.open {
  // Show the menu
  > .dropdown-menu {
    display: block;
  }

  // Remove the outline when :focus is triggered
  > a {
    outline: 0;
  }
}

// Menu positioning
//
// Add extra class to `.dropdown-menu` to flip the alignment of the dropdown
// menu with the parent.
.dropdown-menu-right {
  left: auto; // Reset the default from `.dropdown-menu`
  right: 0;
}

// With v3, we enabled auto-flipping if you have a dropdown within a right
// aligned nav component. To enable the undoing of that, we provide an override
// to restore the default dropdown menu alignment.
//
// This is only for left-aligning a dropdown menu within a `.navbar-right` or
// `.pull-right` nav component.
.dropdown-menu-left {
  left: 0;
  right: auto;
}

// Dropdown section headers
.dropdown-header {
}

// Backdrop to catch body clicks on mobile, etc.
.dropdown-backdrop {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  top: 0;
  z-index: ($z-dropdown - 10);
}

// Right aligned dropdowns
.pull-right > .dropdown-menu {
  right: 0;
  left: auto;
}

// Allow for dropdowns to go bottom up (aka, dropup-menu)
//
// Just add .dropup after the standard .dropdown class and you're set, bro.
// TODO: abstract this so that the navbar fixed styles are not placed here?

.dropup,
.navbar-fixed-bottom .dropdown {
  // Reverse the caret
  .caret {
  }
  // Different positioning for bottom up menu
  .dropdown-menu {
    top: auto;
    bottom: 100%;
  }
}

// Component alignment
//
// Reiterate per navbar.less and the modified component alignment there.

@media (min-width: $bp-sm) {
  .navbar-right {
    .dropdown-menu {
      right: 0;
      left: auto;
    }
    // Necessary for overrides of the default right aligned menu.
    // Will remove come v4 in all likelihood.
    .dropdown-menu-left {
      left: 0;
      right: auto;
    }
  }
}